@using SimpleCRUD.Services
@using SimpleCRUD.ViewModels
@using SimpleCRUD.Enum

@inject EmployeeService EmployeeService 
@inject ISnackbar Snackbar

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
	<MudDialog>
		<DialogContent>
			<DataAnnotationsValidator />
			<MudGrid Class="mb-5">
				<MudItem xs="9">
					<MudTextField 
						Variant="Variant.Outlined" 
						ShrinkLabel 
						Label="Full Name"
						@bind-Value="model.FullName" 
						For="@(() => model.FullName)" />
				</MudItem>
				<MudItem xs="3">
					<MudTextField 
						Variant="Variant.Outlined"
						ShrinkLabel
						Label="Age"
						@bind-Value="model.Age"
						For="@(() => model.Age)" />
				</MudItem>
			</MudGrid>

			<MudDatePicker Class="mb-5" Variant="Variant.Outlined" Label="Date of Birth" @bind-Date="_date" />

			<MudTextField Class="mb-5"
				Variant="Variant.Outlined"
				ShrinkLabel
				Label="Department"
				@bind-Value="model.Department"
				For="@(() => model.Department)" />

			<MudTextField 
				Variant="Variant.Outlined"
				ShrinkLabel
				Label="Phone Number"
				@bind-Value="model.PhoneNumber"
				For="@(() => model.PhoneNumber)" />
		</DialogContent>
		<DialogActions>
			<MudButton OnClick="Cancel">Cancel</MudButton>
			<MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Save</MudButton>
		</DialogActions>
	</MudDialog>
</EditForm>

@code {
	[Parameter]
	public UIActionEnum Action { get; set; } = UIActionEnum.Insert;

	[Parameter]
	public DateTime? _date { get; set; } = DateTime.Today;

	[Parameter]
	public EmployeeViewModel model { get; set; } = new EmployeeViewModel();

	[CascadingParameter]
	private MudDialogInstance MudDialog { get; set; }

	private async Task OnValidSubmit(EditContext editcontext)
	{
		if(_date is not null)
		{
			model.DateOfBirth = _date.Value;
		}

		if(Action == UIActionEnum.Insert)
		{
			CreateEmpolyee();
		} else if (Action == UIActionEnum.Update)
		{
			UpdateEmployee();
		}
	}

	private void CreateEmpolyee()
	{
		var result = EmployeeService.CreateNewEmployee(model);
		if (result)
		{
			Snackbar.Add("Succesfully create the employee", Severity.Success);
			MudDialog.Close();
		}
		else
		{
			Snackbar.Add("Failed create the employee", Severity.Error);
		}
	}

	private void UpdateEmployee()
	{
		var result = EmployeeService.UpdateEmployee(model);
		if (result)
		{
			Snackbar.Add("Succesfully update the employee", Severity.Success);
			MudDialog.Close();
		}
		else
		{
			Snackbar.Add("Failed update the employee", Severity.Error);
		}
	}

	private void Cancel()
	{
		MudDialog.Cancel();	
	}
}